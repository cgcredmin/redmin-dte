name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-west-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: public.ecr.aws/z5x9j2p1/redmindte           # set this to your Amazon ECR repository name
  CONTAINER_NAME: redmindte           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        echo "ecr-registry=$ECR_REGISTRY"
        IMAGE_TAG=$(date +'%y.%m.%d')
        # DOCKER_BUILDKIT=1 docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        DOCKER_BUILDKIT=1 docker build -t $CONTAINER_NAME:$IMAGE_TAG -t $CONTAINER_NAME:latest .
        docker tag $CONTAINER_NAME:"$IMAGE_TAG" ${ECR_REPOSITORY}:"$IMAGE_TAG"
        docker push $ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REPOSITORY:$IMAGE_TAG"
